{"version":3,"sources":["styled.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","components/App.js","index.js"],"names":["s","Form","styled","form","Button","button","BtnRemove","liItem","li","Input","input","Label","label","RESET_STATE_NAME","name","number","ContactForm","state","resetName","setState","handleChange","e","type","target","value","handleSubmit","preventDefault","contact","props","onAddContact","this","onSubmit","placeholder","onChange","Component","Filter","filter","filterVaule","ContactList","contacts","onRemoveContact","map","id","key","onClick","Div","div","TitleH1","h1","TitleH2","Ul","ul","App","addContact","uuidv4","find","item","toLowerCase","alert","toUpperCase","prevState","removeContact","contactId","handleFilter","getFilterContacts","includes","isShowFilter","length","isShowContacts","filterContacts","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.0c7a6909.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst Form = styled.form`\n  margin-bottom: 20px;\n  padding: 10px;\n  max-width: 500px;\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  border: 1px solid;\n`;\n\nconst Button = styled.button`\n  width: 150px;\n  display: block;\n  background: transparent;\n  border-radius: 3px;\n  border: 2px solid palevioletred;\n  color: palevioletred;\n  cursor: pointer;\n  text-transform: uppercase;\n  font-weight: bold;\n  font-size: 14px;\n  transition: all, 0.2s;\n  outline: none;\n\n  &:hover {\n    background-color: palevioletred;\n    color: white;\n  }\n`;\n\nconst BtnRemove = styled.button`\n  min-width: 60px;\n  margin-left: 10px;\n  background: transparent;\n  cursor: pointer;\n  border: 2px solid palevioletred;\n  border-radius: 3px;\n  font-size: 14px;\n  color: palevioletred;\n  outline: none;\n  transition: all 0.2s;\n\n  &:hover {\n    background-color: palevioletred;\n    color: white;\n  }\n`;\n\nconst liItem = styled.li`\n  margin-bottom: 5px;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nconst Input = styled.input`\n  margin-bottom: 20px;\n  text-align: center;\n\n  &::placeholder {\n    font-size: 14px;\n  }\n`;\n\nconst Label = styled.label`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst s = { Form, Button, BtnRemove, liItem, Input, Label };\nexport default s;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from '../../styled';\n\nconst RESET_STATE_NAME = {\n  name: '',\n  number: '',\n};\n\nexport default class ContactForm extends Component {\n  static propTypes = {\n    onAddContact: PropTypes.func.isRequired,\n  };\n\n  state = { ...RESET_STATE_NAME, name: '', number: '' };\n\n  resetName = () => {\n    this.setState({ ...RESET_STATE_NAME });\n  };\n\n  handleChange = (e, type) => {\n    this.setState({ [type]: e.target.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n\n    if (name && number) {\n      const contact = { name: name, number: number };\n\n      this.props.onAddContact(contact);\n      this.resetName();\n    }\n  };\n\n  render() {\n    const { name, number } = this.state;\n    const { handleSubmit, handleChange } = this;\n\n    return (\n      <>\n        <s.Form onSubmit={handleSubmit}>\n          <s.Label>\n            Name\n            <s.Input\n              type=\"text\"\n              placeholder=\"Сontact name\"\n              value={name}\n              onChange={e => handleChange(e, 'name')}\n            />\n          </s.Label>\n          <s.Label>\n            Number\n            <s.Input\n              type=\"number\"\n              placeholder=\"Сontact number\"\n              value={number}\n              onChange={e => handleChange(e, 'number')}\n            />\n          </s.Label>\n\n          <s.Button type=\"submit\">Add contact</s.Button>\n        </s.Form>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styled from 'styled-components';\n\nconst Input = styled.input`\n  margin-bottom: 20px;\n  text-align: center;\n\n  &::placeholder {\n    font-size: 14px;\n  }\n`;\n\nconst Filter = ({ ...props }) => {\n  const { filter, handleChange } = props;\n\n  const onChangeHandler = e => {\n    const filterVaule = e.target.value;\n\n    handleChange(filterVaule);\n  };\n\n  return (\n    <div>\n      <p>Find contacts by name</p>\n      <Input\n        type=\"text\"\n        placeholder=\"Filter\"\n        value={filter}\n        onChange={onChangeHandler}\n      />\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from '../../styled';\r\n\r\nconst ContactList = ({ contacts, onRemoveContact }) => {\r\n  return contacts.map(({ id, name, number }) => (\r\n    <s.liItem key={id}>\r\n      {name}: {number}\r\n      <s.BtnRemove type=\"button\" onClick={() => onRemoveContact(id)}>\r\n        Delete\r\n      </s.BtnRemove>\r\n    </s.liItem>\r\n  ));\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.objectOf(PropTypes.string.isRequired).isRequired,\r\n  ).isRequired,\r\n\r\n  onRemoveContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React, { Component } from 'react';\n\nimport ContactForm from './ContactForm/ContactForm';\nimport Filter from './Filter/Filter';\nimport ContactList from './ContactList/ContactList';\n\nimport { v4 as uuidv4 } from 'uuid';\nimport styled from 'styled-components';\n\nconst Div = styled.div`\n  margin: 0 auto;\n  padding: 10px 10px;\n  max-width: 500px;\n`;\n\nconst TitleH1 = styled.h1`\n  margin-bottom: 20px;\n  font-size: 20px;\n  font-weight: bold;\n`;\nconst TitleH2 = styled(TitleH1)``;\n\nconst Ul = styled.ul`\n  padding-left: 20px;\n`;\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  addContact = ({ name, number }) => {\n    const { contacts } = this.state;\n    const id = uuidv4();\n\n    const isCheckDuplicate = contacts.find(\n      item => item.name.toLowerCase() === name.toLowerCase(),\n    );\n\n    !isCheckDuplicate\n      ? this.setState(prevState => ({\n          contacts: [\n            ...prevState.contacts,\n            { name: name, number: number, id: id },\n          ],\n        }))\n      : alert(`${name.toUpperCase()} is already in contacts`);\n  };\n\n  removeContact = contactId => {\n    this.setState(prevState => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n      };\n    });\n  };\n\n  handleFilter = value => {\n    this.setState({ filter: value });\n  };\n\n  getFilterContacts = () => {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const { handleFilter, getFilterContacts, addContact, removeContact } = this;\n\n    const isShowFilter = contacts.length > 1;\n    const isShowContacts = contacts.length > 0;\n    const filterContacts = getFilterContacts();\n\n    return (\n      <Div>\n        <TitleH1>Phonebook</TitleH1>\n        <ContactForm onAddContact={addContact} />\n\n        <TitleH2>Contacts</TitleH2>\n        {isShowFilter && <Filter filter={filter} handleChange={handleFilter} />}\n\n        <Ul>\n          {isShowContacts ? (\n            <ContactList\n              contacts={filterContacts}\n              onRemoveContact={removeContact}\n            />\n          ) : (\n            <li>No contacts</li>\n          )}\n        </Ul>\n      </Div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\n\nimport 'modern-normalize/modern-normalize.css';\nimport './base.scss';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}