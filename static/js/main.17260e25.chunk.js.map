{"version":3,"sources":["styled.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","components/App.js","index.js"],"names":["s","Form","styled","form","Button","button","BtnRemove","Ul","ul","liItem","li","Input","input","Label","label","INITIAL_STATE","name","number","ContactForm","state","resetState","setState","handleChange","target","value","handleSubmit","e","preventDefault","NewContact","props","onAddContact","this","onSubmit","type","placeholder","onChange","Component","Filter","filter","ContactList","isShowContacts","contacts","onRemoveContact","map","id","key","onClick","Div","div","TitleH1","h1","TitleH2","App","handleAddContact","find","el","toLowerCase","alert","toUpperCase","prevState","uuidv4","handleRemoveContact","contactId","handleFilter","getFilterContacts","contact","includes","isShowFilter","length","filterContacts","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.17260e25.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst Form = styled.form`\n  margin-bottom: 20px;\n  padding: 10px;\n  max-width: 500px;\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  border: 1px solid;\n`;\n\nconst Button = styled.button`\n  width: 150px;\n  display: block;\n  background: transparent;\n  border-radius: 3px;\n  border: 2px solid palevioletred;\n  color: palevioletred;\n  cursor: pointer;\n  text-transform: uppercase;\n  font-weight: bold;\n  font-size: 14px;\n  transition: all, 0.2s;\n  outline: none;\n\n  &:hover {\n    background-color: palevioletred;\n    color: white;\n  }\n`;\n\nconst BtnRemove = styled.button`\n  min-width: 60px;\n  margin-left: 10px;\n  background: transparent;\n  cursor: pointer;\n  border: 2px solid palevioletred;\n  border-radius: 3px;\n  font-size: 14px;\n  color: palevioletred;\n  outline: none;\n  transition: all 0.2s;\n\n  &:hover {\n    background-color: palevioletred;\n    color: white;\n  }\n`;\n\nconst Ul = styled.ul`\n  padding-left: 20px;\n`;\n\nconst liItem = styled.li`\n  margin-bottom: 5px;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nconst Input = styled.input`\n  margin-bottom: 20px;\n  text-align: center;\n\n  &::placeholder {\n    font-size: 14px;\n  }\n`;\n\nconst Label = styled.label`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst s = { Form, Button, BtnRemove, Ul, liItem, Input, Label };\nexport default s;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from '../../styled';\n\nconst INITIAL_STATE = {\n  name: '',\n  number: '',\n};\n\nexport default class ContactForm extends Component {\n  static propTypes = {\n    onAddContact: PropTypes.func.isRequired,\n  };\n\n  state = INITIAL_STATE;\n\n  resetState = () => {\n    this.setState(INITIAL_STATE);\n  };\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n\n    if (name && number) {\n      const NewContact = { name, number };\n\n      this.props.onAddContact(NewContact);\n      this.resetState();\n    }\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <>\n        <s.Form onSubmit={this.handleSubmit}>\n          <s.Label>\n            Name\n            <s.Input\n              type=\"text\"\n              placeholder=\"Сontact name\"\n              name=\"name\"\n              value={name}\n              onChange={this.handleChange}\n            />\n          </s.Label>\n          <s.Label>\n            Number\n            <s.Input\n              type=\"number\"\n              placeholder=\"Сontact number\"\n              name=\"number\"\n              value={number}\n              onChange={this.handleChange}\n            />\n          </s.Label>\n\n          <s.Button type=\"submit\">Add contact</s.Button>\n        </s.Form>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styled from 'styled-components';\n\nconst Input = styled.input`\n  margin-bottom: 20px;\n  text-align: center;\n\n  &::placeholder {\n    font-size: 14px;\n  }\n`;\n\nconst Filter = ({ filter, onChange }) => {\n  return (\n    <div>\n      <p>Find contacts by name</p>\n      <Input\n        type=\"text\"\n        placeholder=\"Filter\"\n        name=\"filter\"\n        value={filter}\n        onChange={onChange}\n      />\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from '../../styled';\n\nconst ContactList = ({ isShowContacts, contacts, onRemoveContact }) => {\n  return (\n    <>\n      {isShowContacts ? (\n        <s.Ul>\n          {contacts.map(({ id, name, number }) => (\n            <s.liItem key={id}>\n              {name}: {number}\n              <s.BtnRemove type=\"button\" onClick={() => onRemoveContact(id)}>\n                Delete\n              </s.BtnRemove>\n            </s.liItem>\n          ))}\n        </s.Ul>\n      ) : (\n        <p>No contacts in data :(</p>\n      )}\n    </>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.objectOf(PropTypes.string.isRequired).isRequired,\n  ).isRequired,\n\n  onRemoveContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React, { Component } from 'react';\r\n\r\nimport ContactForm from './ContactForm/ContactForm';\r\nimport Filter from './Filter/Filter';\r\nimport ContactList from './ContactList/ContactList';\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport styled from 'styled-components';\r\n\r\nconst Div = styled.div`\r\n  margin: 0 auto;\r\n  padding: 10px 10px;\r\n  max-width: 500px;\r\n`;\r\n\r\nconst TitleH1 = styled.h1`\r\n  margin-bottom: 20px;\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n`;\r\nconst TitleH2 = styled(TitleH1)``;\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n    filter: '',\r\n  };\r\n\r\n  handleAddContact = ({ name, number }) => {\r\n    const { contacts } = this.state;\r\n\r\n    const isCheckDuplicate = contacts.find(\r\n      el => el.name.toLowerCase() === name.toLowerCase(),\r\n    );\r\n\r\n    const notAdd = () => alert(`${name.toUpperCase()} is already in contacts`);\r\n    const add = () =>\r\n      this.setState(prevState => ({\r\n        contacts: [...prevState.contacts, { name, number, id: uuidv4() }],\r\n      }));\r\n\r\n    !isCheckDuplicate ? add() : notAdd();\r\n  };\r\n\r\n  handleRemoveContact = contactId => {\r\n    this.setState(prevState => {\r\n      return {\r\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\r\n      };\r\n    });\r\n  };\r\n\r\n  handleFilter = ({ target }) => {\r\n    const { value, name } = target;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  getFilterContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { contacts, filter } = this.state;\r\n\r\n    const isShowFilter = contacts.length > 1;\r\n    const isShowContacts = contacts.length > 0;\r\n    const filterContacts = this.getFilterContacts();\r\n\r\n    return (\r\n      <Div>\r\n        <TitleH1>Phonebook</TitleH1>\r\n        <ContactForm onAddContact={this.handleAddContact} />\r\n\r\n        <TitleH2>Contacts</TitleH2>\r\n        {isShowFilter && (\r\n          <Filter filter={filter} onChange={this.handleFilter} />\r\n        )}\r\n\r\n        <ContactList\r\n          isShowContacts={isShowContacts}\r\n          contacts={filterContacts}\r\n          onRemoveContact={this.handleRemoveContact}\r\n        />\r\n      </Div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\n\nimport 'modern-normalize/modern-normalize.css';\nimport './base.scss';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}