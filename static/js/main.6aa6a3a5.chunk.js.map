{"version":3,"sources":["components/ContactForm/ContactForm.module.scss","components/ContactList/ContactList.module.scss","components/App.module.scss","components/animation.module.scss","components/Filter/Filter.module.scss","components/ContactList/fadeContacts.module.scss","components/Notification/Notification.module.scss","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","components/Notification/Notification.js","components/App.js","index.js"],"names":["module","exports","INITIAL_STATE","name","number","ContactForm","state","resetState","setState","handleChange","target","value","handleSubmit","e","preventDefault","NewContact","props","onAddContact","this","className","s","form","onSubmit","label","input","type","placeholder","onChange","button","Component","Filter","filter","filterBox","inputFilter","ContactList","isShowContacts","contacts","onRemoveContact","TransitionGroup","in","toString","component","ul","map","id","CSSTransition","key","timeout","classNames","animation","liItem","btnRemove","onClick","Notification","contact","notification","App","isAlreadyContact","isShowMessage","handleAddContact","find","el","toLowerCase","toUpperCase","setTimeout","prevState","uuidv4","handleRemoveContact","contactId","handleFilter","getFilterContacts","includes","handleNotification","contactsData","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","isShowFilter","length","filterContacts","interfaceBox","appear","titleApp","unmountOnExit","titleContacts","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.6aa6a3a5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__YrcwH\",\"label\":\"ContactForm_label__1cCmR\",\"input\":\"ContactForm_input__2QmHF\",\"button\":\"ContactForm_button__YYnAy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ul\":\"ContactList_ul__YXreg\",\"liItem\":\"ContactList_liItem__3HhEM\",\"btnRemove\":\"ContactList_btnRemove__w8l_L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"interfaceBox\":\"App_interfaceBox__Djhow\",\"titleApp\":\"App_titleApp__CaNdP\",\"titleContacts\":\"App_titleContacts__3cBL8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"animation_appear__3TcVZ\",\"appearActive\":\"animation_appearActive__TvgSM\",\"enter\":\"animation_enter__1kDWs\",\"enterActive\":\"animation_enterActive__l4ROF\",\"exit\":\"animation_exit__3Kb6n\",\"exitActive\":\"animation_exitActive__2Aswo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterBox\":\"Filter_filterBox__ntwBf\",\"inputFilter\":\"Filter_inputFilter__Ad9cj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"fadeContacts_enter__3GaB3\",\"enterActive\":\"fadeContacts_enterActive__AzRo2\",\"exit\":\"fadeContacts_exit__tqkRd\",\"exitActive\":\"fadeContacts_exitActive__3pMQA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__13YAo\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from './ContactForm.module.scss';\n\nconst INITIAL_STATE = {\n  name: '',\n  number: '',\n};\n\nexport default class ContactForm extends Component {\n  static propTypes = {\n    onAddContact: PropTypes.func.isRequired,\n  };\n\n  state = INITIAL_STATE;\n\n  resetState = () => {\n    this.setState(INITIAL_STATE);\n  };\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n\n    if (name && number) {\n      const NewContact = { name, number };\n\n      this.props.onAddContact(NewContact);\n      this.resetState();\n    }\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <>\n        <form className={s.form} onSubmit={this.handleSubmit}>\n          <label className={s.label}>\n            Name\n            <input\n              className={s.input}\n              type=\"text\"\n              placeholder=\"Сontact name\"\n              name=\"name\"\n              value={name}\n              onChange={this.handleChange}\n            />\n          </label>\n          <label className={s.label}>\n            Number\n            <input\n              className={s.input}\n              type=\"number\"\n              placeholder=\"Сontact number\"\n              name=\"number\"\n              value={number}\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <button className={s.button} type=\"submit\">\n            Add contact\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from './Filter.module.scss';\n\nconst Filter = ({ filter, onChange }) => {\n  return (\n    <div className={s.filterBox}>\n      <p>Find contacts by name</p>\n      <input\n        className={s.inputFilter}\n        type=\"text\"\n        placeholder=\"Filter\"\n        name=\"filter\"\n        value={filter}\n        onChange={onChange}\n      />\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nimport s from './ContactList.module.scss';\nimport animation from './fadeContacts.module.scss';\n\nconst ContactList = ({ isShowContacts, contacts, onRemoveContact }) => {\n  return (\n    <>\n      <TransitionGroup\n        in={isShowContacts.toString()}\n        component=\"ul\"\n        className={s.ul}\n      >\n        {contacts.map(({ id, name, number }) => (\n          <CSSTransition key={id} timeout={250} classNames={animation}>\n            <li className={s.liItem}>\n              <p>\n                {name}: {number}\n              </p>\n              <button\n                className={s.btnRemove}\n                type=\"button\"\n                onClick={() => onRemoveContact(id)}\n              >\n                Delete\n              </button>\n            </li>\n          </CSSTransition>\n        ))}\n      </TransitionGroup>\n\n      {!isShowContacts && <p>No contacts in data :(</p>}\n    </>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.objectOf(PropTypes.string.isRequired).isRequired,\n  ).isRequired,\n\n  onRemoveContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React from 'react';\n\nimport s from './Notification.module.scss';\n\nexport default function Notification({ contact, onClick }) {\n  return (\n    <div onClick={onClick} className={s.notification}>\n      {contact && `${contact} is already in contacts`}\n      {!contact && 'Close'}\n    </div>\n  );\n}\n","import React, { Component } from 'react';\n\nimport { v4 as uuidv4 } from 'uuid';\nimport { CSSTransition } from 'react-transition-group';\n\nimport ContactForm from './ContactForm/ContactForm';\nimport Filter from './Filter/Filter';\nimport ContactList from './ContactList/ContactList';\nimport Notification from './Notification/Notification';\n\nimport s from './App.module.scss';\nimport animation from './animation.module.scss';\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n    isAlreadyContact: { name: '', isShowMessage: false },\n  };\n\n  componentDidMount() {\n    const contactsData = localStorage.getItem('contacts');\n\n    if (contactsData) {\n      this.setState({ contacts: JSON.parse(contactsData) });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  handleAddContact = ({ name, number }) => {\n    const { contacts } = this.state;\n\n    const isCheckDuplicate = contacts.find(\n      el => el.name.toLowerCase() === name.toLowerCase(),\n    );\n\n    const notAdd = () => {\n      this.setState({\n        isAlreadyContact: { name: name.toUpperCase(), isShowMessage: true },\n      });\n      setTimeout(\n        () => this.setState({ isAlreadyContact: { isShowMessage: false } }),\n        6000,\n      );\n    };\n    const add = () =>\n      this.setState(prevState => ({\n        contacts: [{ name, number, id: uuidv4() }, ...prevState.contacts],\n      }));\n\n    !isCheckDuplicate ? add() : notAdd();\n  };\n\n  handleRemoveContact = contactId => {\n    this.setState(prevState => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n      };\n    });\n  };\n\n  handleFilter = ({ target }) => {\n    const { value, name } = target;\n\n    this.setState({ [name]: value });\n  };\n\n  getFilterContacts = () => {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  handleNotification = () => {\n    this.setState({ isAlreadyContact: { isShowMessage: false } });\n  };\n\n  render() {\n    const { contacts, filter, isAlreadyContact } = this.state;\n\n    const isShowFilter = contacts.length > 1;\n    const isShowContacts = contacts.length > 0;\n    const filterContacts = this.getFilterContacts();\n    const { isShowMessage, name } = isAlreadyContact;\n\n    return (\n      <div className={s.interfaceBox}>\n        <CSSTransition in={true} appear timeout={500} classNames={animation}>\n          <h1 className={s.titleApp}>Phonebook</h1>\n        </CSSTransition>\n\n        <CSSTransition\n          in={isShowMessage}\n          timeout={250}\n          classNames={animation}\n          unmountOnExit\n        >\n          <Notification contact={name} onClick={this.handleNotification} />\n        </CSSTransition>\n\n        <ContactForm onAddContact={this.handleAddContact} />\n\n        <h2 className={s.titleContacts}>Contacts</h2>\n        <CSSTransition\n          in={isShowFilter}\n          timeout={250}\n          classNames={animation}\n          unmountOnExit\n        >\n          <Filter filter={filter} onChange={this.handleFilter} />\n        </CSSTransition>\n\n        <ContactList\n          isShowContacts={isShowContacts}\n          contacts={filterContacts}\n          onRemoveContact={this.handleRemoveContact}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\n\nimport 'modern-normalize/modern-normalize.css';\nimport './base.scss';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}